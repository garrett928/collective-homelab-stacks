version: '3'
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    # ports:
    #   - "9090:9090"
    volumes:
      # portainer includes the ./config/prometheus.yml so this mount works
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command: "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped
    networks:
      - prometheus-internal
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.ghart.space`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.routers.prometheus.tls.certresolver=leresolver"
      - "traefik.docker.network=traefik-network"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    # expose:
    #   - 9100
    networks:
      - prometheus-internal
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodeexporter.rule=Host(`metrics.ghart.space`) && PathPrefix(`/nodeexporter`)"
      - "traefik.http.routers.nodeexporter.entrypoints=websecure"
      - "traefik.http.services.nodeexporter.loadbalancer.server.port=9100"
      - "traefik.http.routers.nodeexporter.service=nodeexporter"
      - "traefik.http.routers.nodeexporter.tls.certresolver=leresolver"
      - "traefik.http.routers.nodeexporter.middlewares=nodeexporter-stripprefix"
      - "traefik.http.middlewares.nodeexporter-stripprefix.stripprefix.prefixes=/nodeexporter"
      - "traefik.docker.network=traefik-network"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest    
    container_name: cadvisor
    # ports:
    #  - 9080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
    networks:
      - prometheus-internal
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`metrics.ghart.space`) && PathPrefix(`/cadvisor`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "traefik.http.routers.cadvisor.service=cadvisor"
      - "traefik.http.routers.cadvisor.tls.certresolver=leresolver"
      - "traefik.http.routers.cadvisor.middlewares=cadvisor-stripprefix"
      - "traefik.http.middlewares.cadvisor-stripprefix.stripprefix.prefixes=/cadvisor"
      - "traefik.docker.network=traefik-network"

networks:
  prometheus-internal:
    internal: true
    name: prometheus-internal
  traefik-network:
    external: true
    name: traefik-network

volumes:
  prometheus-data:
    driver: local
