apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transmission
  template:
    metadata:
      labels:
        app: transmission
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - b8s-02
      containers:
      # Gluetun VPN sidecar container - handles network and exposes ports
      - name: gluetun
        image: qmcgaw/gluetun
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        env:
        - name: FIREWALL_VPN_INPUT_PORTS
          value: "57053"
        - name: VPN_SERVICE_PROVIDER
          value: "airvpn"
        - name: VPN_TYPE
          value: "wireguard"
        - name: WIREGUARD_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: media-secrets
              key: WIREGUARD_PRIVATE_KEY
        - name: WIREGUARD_PRESHARED_KEY
          valueFrom:
            secretKeyRef:
              name: media-secrets
              key: WIREGUARD_PRESHARED_KEY
        - name: WIREGUARD_ADDRESSES
          valueFrom:
            secretKeyRef:
              name: media-secrets
              key: WIREGUARD_ADDRESSES
        - name: SERVER_REGIONS
          value: "America"  
        - name: FIREWALL_OUTBOUND_SUBNETS
          value: "192.168.0.0/16,10.0.0.0/8"
        - name: TZ
          value: "America/New_York"
        # Gluetun exposes the ports that transmission will use
        ports:
        - containerPort: 9091
          name: web
        - containerPort: 51413
          name: peer
          protocol: TCP
        - containerPort: 51413
          name: peer-udp
          protocol: UDP
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: dev-tun
          mountPath: /dev/net/tun
      
      # Transmission container using Gluetun's network
      - name: transmission
        image: lscr.io/linuxserver/transmission:latest
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "America/New_York"
        - name: USER
          valueFrom:
            secretKeyRef:
              name: media-secrets
              key: TRANSMISSION_USERNAME
        - name: PASS
          valueFrom:
            secretKeyRef:
              name: media-secrets
              key: TRANSMISSION_PASSWORD
        # No ports needed - network is shared with gluetun
        volumeMounts:
        - name: config
          mountPath: /config
        - name: data
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: transmission-conf
      - name: data
        persistentVolumeClaim:
          claimName: media-storage
      - name: dev-tun
        hostPath:
          path: /dev/net/tun
          type: CharDevice
      
      # Containers in the same pod automatically share network namespace
      # Use default Kubernetes DNS for internal service discovery
      dnsPolicy: "ClusterFirst"
