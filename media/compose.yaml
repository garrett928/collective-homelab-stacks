version: "3.8"

services:
  # gluetun:
  #   image: qmcgaw/gluetun
  #   container_name: gluetun
  #   cap_add:
  #     - NET_ADMIN
  #   devices:
  #     - /dev/net/tun
  #   volumes:
  #     - /opt/gluetun:/gluetun
  #   ports:
  #     - "9091:9091"  # Transmission UI through VPN
  #   environment:
  #     - VPN_SERVICE_PROVIDER=custom
  #     - VPN_TYPE=openvpn
  #     - OPENVPN_CUSTOM_CONFIG=/gluetun/airvpn.ovpn
  #     - OPENVPN_USERFILE=/gluetun/credentials.txt
  #     - FIREWALL_OUTBOUND_SUBNETS=192.168.0.0/16,10.0.0.0/8
  #     - TZ=America/New_York
  #   restart: unless-stopped
  #   networks:
      # - traefik-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.gluetun.rule=Host(`gluetun.ghart.space`)"
  #     - "traefik.http.routers.gluetun.entrypoints=websecure"
  #     - "traefik.http.services.gluetun.loadbalancer.server.port=9091"
  #     - "traefik.http.routers.gluetun.service=gluetun"
  #     - "traefik.http.routers.gluetun.tls.certresolver=leresolver"
  #     - "traefik.docker.network=traefik-network"

  # transmission:
  #   image: lscr.io/linuxserver/transmission:latest
  #   container_name: transmission
  #   network_mode: "service:gluetun"  # Route Transmission through Gluetun
  #   depends_on:
  #     - gluetun
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/New_York
  #   volumes:
  #     - media_data:/data
  #     - transmission_config:/config
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.transmission.rule=Host(`transmission.ghart.space`)"
  #     - "traefik.http.routers.transmission.entrypoints=websecure"
  #     - "traefik.http.services.transmission.loadbalancer.server.port=9091"
  #     - "traefik.http.routers.transmission.service=transmission"
  #     - "traefik.http.routers.transmission.tls.certresolver=leresolver"
  #     - "traefik.docker.network=traefik-network"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - radarr_config:/config
      - media_data:/data
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.ghart.space`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.service=radarr"
      - "traefik.http.routers.radarr.tls.certresolver=leresolver"
      - "traefik.docker.network=traefik-network"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - prowlarr_config:/config
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.ghart.space`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "traefik.http.routers.prowlarr.service=prowlarr"
      - "traefik.http.routers.prowlarr.tls.certresolver=leresolver"
      - "traefik.docker.network=traefik-network"

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - jellyfin_config:/config
      - media_data:/data:ro
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.ghart.space`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.http.routers.jellyfin.service=jellyfin"
      - "traefik.http.routers.jellyfin.tls.certresolver=leresolver"
      - "traefik.docker.network=traefik-network"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - sonarr_config:/config
      - media_data:/data
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.ghart.space`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.service=sonarr"
      - "traefik.http.routers.sonarr.tls.certresolver=leresolver"
      - "traefik.docker.network=traefik-network"

volumes:
  radarr_config:
  prowlarr_config:
  jellyfin_config:
  sonarr_config:
  transmission_config:
  media_data:
    driver: nfs
    driver_opts:
      share: "truenas.ghart.space:/mnt/Media/media"
      
networks:
  traefik-network:
    external: true
    name: traefik-network
